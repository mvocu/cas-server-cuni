<?xml version="1.0" encoding="UTF-8"?>
<!--
| deployerConfigContext.xml centralizes into one file some of the declarative configuration that
| all CAS deployers will need to modify.
|
| This file declares some of the Spring-managed JavaBeans that make up a CAS deployment.
| The beans declared in this file are instantiated at context initialization time by the Spring
| ContextLoaderListener declared in web.xml.  It finds this file because this
| file is among those declared in the context parameter "contextConfigLocation".
|
| By far the most common change you will need to make in this file is to change the last bean
| declaration to replace the default authentication handler with
| one implementing your approach for authenticating usernames and passwords.
+-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:ldaptive="http://www.ldaptive.org/schema/spring-ext"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.ldaptive.org/schema/spring-ext
       http://www.ldaptive.org/schema/spring-ext.xsd">


    <util:map id="authenticationHandlersResolvers">
        <entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver" />
        <entry key-ref="realmLdapAuthenticationHandler" value="#{null}" /> <!-- value-ref="primaryPrincipalResolver" --> 
	<entry key-ref="nameLdapAuthenticationHandler" value="#{null}" /> <!-- value-ref="primaryPrincipalResolver" -->
    </util:map>

    <util:list id="authenticationMetadataPopulators">
        <ref bean="successfulHandlerMetaDataPopulator" />
        <ref bean="rememberMeAuthenticationMetaDataPopulator" />
    </util:list>


   <bean id="attributeRepository" class="org.jasig.services.persondir.support.NamedStubPersonAttributeDao"
         p:backingMap-ref="attrRepoBackingMap" />



    <alias name="acceptUsersAuthenticationHandler" alias="primaryAuthenticationHandler" />
    <alias name="personDirectoryPrincipalResolver" alias="primaryPrincipalResolver" />

    <util:map id="attrRepoBackingMap">
<!--
        <entry key="uid" value="uid" />
        <entry key="eduPersonAffiliation" value="eduPersonAffiliation" />
        <entry key="groupMembership" value="groupMembership" />
        <entry>
            <key><value>memberOf</value></key>
            <list>
                <value>faculty</value>
                <value>staff</value>
                <value>org</value>
            </list>
        </entry>
-->
    </util:map>


    <alias name="serviceThemeResolver" alias="themeResolver" />

    <alias name="jsonServiceRegistryDao" alias="serviceRegistryDao" />

    <alias name="hazelcastTicketRegistry" alias="ticketRegistry" />

    <alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy" />
    <alias name="multiTimeUseOrTimeoutExpirationPolicy" alias="serviceTicketExpirationPolicy" />

    <alias name="anyAuthenticationPolicy" alias="authenticationPolicy" />
    <alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory" />

    <bean id="auditTrailManager"
          class="org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager"
          p:entrySeparator="${cas.audit.singleline.separator:|}"
          p:useSingleLine="${cas.audit.singleline:false}"/>

    <alias name="neverThrottle" alias="authenticationThrottle" />

    <util:list id="monitorsList">
        <ref bean="memoryMonitor" />
        <ref bean="sessionMonitor" />
    </util:list>

    <alias name="defaultPrincipalFactory" alias="principalFactory" />
    <alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager" />
    <alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy" />
    <alias name="tgcCipherExecutor" alias="defaultCookieCipherExecutor" />


    <bean id="realmLdapAuthenticationHandler" class="org.jasig.cas.authentication.LdapAuthenticationHandler"
      p:principalIdAttribute="cunipersonalid"
      p:principalNameTransformer-ref="realmPrincipalNameTransformer"
      c:authenticator-ref="authenticator" >
    	<property name="principalAttributeMap">
           <map>
            <!--
               | Key is LDAP attribute name, value is principal attribute name.
               -->
            <entry key="uid" value="uid" />
            <entry key="mail" value="mail" />
            <entry key="cn" value="cn" />
	    <entry key="givenname" value="givenname" />
	    <entry key="sn" value="sn" />
            <entry key="cunipersonalid" value="cunipersonalid" />
           </map>
    	</property>
    </bean>

    <bean id="realmPrincipalNameTransformer" class="org.jasig.cas.authentication.handler.RegexPrincipalNameTransformer"
      p:regex="@"
      p:replace="/" />

    <bean id="nameLdapAuthenticationHandler" class="org.jasig.cas.authentication.LdapAuthenticationHandler"
      p:principalIdAttribute="cunipersonalid"
      p:principalNameTransformer-ref="namePrincipalNameTransformer"
      c:authenticator-ref="authenticator" >
    	<property name="principalAttributeMap">
           <map>
            <!--
               | Key is LDAP attribute name, value is principal attribute name.
               -->
            <entry key="uid" value="uid" />
            <entry key="mail" value="mail" />
            <entry key="cn" value="cn" />
	    <entry key="givenname" value="givenname" />
	    <entry key="sn" value="sn" />
            <entry key="cunipersonalid" value="cunipersonalid" />
           </map>
    	</property>
    </bean>

    <bean id="namePrincipalNameTransformer" class="org.jasig.cas.authentication.handler.RegexPrincipalNameTransformer"
      p:regex="[@/].*"
      p:replace="" />

    <ldaptive:bind-search-authenticator id="authenticator"
        ldapUrl="${ldap.url}"
        baseDn="${ldap.baseDn}"
        userFilter="${ldap.authn.searchFilter}"
        bindDn="${ldap.managerDn}"
        bindCredential="${ldap.managerPassword}"
        connectTimeout="${ldap.connectTimeout}"
        useStartTLS="${ldap.useStartTLS}"
        blockWaitTime="${ldap.pool.blockWaitTime}"
        maxPoolSize="${ldap.pool.maxSize}"
        allowMultipleDns="${ldap.allowMultipleDns:false}"
        usePasswordPolicy="${ldap.usePpolicy:false}"
        minPoolSize="${ldap.pool.minSize}"
        validateOnCheckOut="${ldap.pool.validateOnCheckout}"
        validatePeriodically="${ldap.pool.validatePeriodically}"
        validatePeriod="${ldap.pool.validatePeriod}"
        idleTime="${ldap.pool.idleTime}"
        prunePeriod="${ldap.pool.prunePeriod}"
        failFastInitialize="true"
        subtreeSearch="${ldap.subtree.search:true}"
        useSSL="${ldap.use.ssl:false}" />


<!-- NOT USED
 |    <bean id="jaasAuthenticationHandler" class="org.jasig.cas.authentication.handler.support.JaasAuthenticationHandler"
 |     p:realm="${cas.authn.jaas.realm}" />
 |
 |   <bean id="attributeRepository"
 |     class="org.jasig.services.persondir.support.ldap.LdaptivePersonAttributeDao"
 |     p:connectionFactory-ref="pooledLdapConnectionFactory"
 |     p:baseDN="${ldap.baseDn}"
 |     p:searchControls-ref="searchControls"
 |     p:searchFilter="uid={0}">
 |   	<property name="resultAttributeMapping">
 |          <map>
 |          <entry key="uid" value="uid" />
 |          <entry key="mail" value="mail" />
 |          <entry key="cn" value="cn" />
 |	    <entry key="givenname" value="givenname" />
 |	    <entry key="sn" value="sn" />
 |          <entry key="cunipersonalid" value="cunipersonalid" />
 |         </map>
 |  	</property>
 |  </bean>
 |
 |  <bean id="pooledLdapConnectionFactory" class="org.ldaptive.pool.PooledConnectionFactory"
 |     p:connectionPool-ref="connectionPool" />
 |  
 |  <bean id="connectionPool" class="org.ldaptive.pool.BlockingConnectionPool"
 |    init-method="initialize"
 |    p:poolConfig-ref="ldapPoolConfig"
 |    p:blockWaitTime="${ldap.pool.blockWaitTime}"
 |    p:validator-ref="searchValidator"
 |    p:pruneStrategy-ref="pruneStrategy"
 |    p:connectionFactory-ref="connectionFactory" />
 |
 |  <bean id="ldapPoolConfig" class="org.ldaptive.pool.PoolConfig"
 |    p:minPoolSize="${ldap.pool.minSize}"
 |    p:maxPoolSize="${ldap.pool.maxSize}"
 |    p:validateOnCheckOut="${ldap.pool.validateOnCheckout}"
 |    p:validatePeriodically="${ldap.pool.validatePeriodically}"
 |    p:validatePeriod="${ldap.pool.validatePeriod}" />
 |
 |  <bean id="connectionFactory" class="org.ldaptive.DefaultConnectionFactory"
 |    p:connectionConfig-ref="connectionConfig" />
 |
 |  <bean id="connectionConfig" class="org.ldaptive.ConnectionConfig"
 |    p:ldapUrl="${ldap.url}"
 |    p:connectionInitializer-ref="bindConnectionInitializer"
 |    p:connectTimeout="${ldap.connectTimeout}"
 |    p:useStartTLS="${ldap.useStartTLS}" />
 |
 |  <bean id="bindConnectionInitializer" class="org.ldaptive.BindConnectionInitializer"
 |    p:bindDn="${ldap.managerDn}">
 |    <property name="bindCredential">
 |      <bean class="org.ldaptive.Credential"
 |            c:password="${ldap.managerPassword}" />
 |    </property>
 |  </bean>
 |
 |  <bean id="pruneStrategy" class="org.ldaptive.pool.IdlePruneStrategy"
 |    p:prunePeriod="${ldap.pool.prunePeriod}"
 |    p:idleTime="${ldap.pool.idleTime}" />
 |
 |  <bean id="searchValidator" class="org.ldaptive.pool.SearchValidator" />
 |
 |  <bean id="searchControls" class="javax.naming.directory.SearchControls"
 |    p:searchScope="2" />
 +-->

    <bean id="samlMetadataUIParserAction"
      class="org.jasig.cas.support.saml.web.flow.mdui.SamlMetadataUIParserAction"
      c:entityIdParameterName="entityId"
      c:metadataAdapter-ref="metadataAdapter"/>

    <bean id="metadataAdapter"
      class="org.jasig.cas.support.saml.web.flow.mdui.StaticMetadataResolverAdapter"
      c:metadataResources-ref="metadataResources"
      p:refreshIntervalInMinutes="300"
      p:requireValidMetadata="true" />

    <util:map id="metadataResources">
        <entry key="file:/opt/shibboleth-idp/metadata/ldap3-metadata.xml">
            <bean class="org.opensaml.saml.metadata.resolver.filter.impl.MetadataFilterChain">
                <property name="filters">
                    <list />
                </property>
            </bean>
        </entry>
        <entry key="file:/opt/shibboleth-idp/metadata/eduid-metadata.xml">
            <bean class="org.opensaml.saml.metadata.resolver.filter.impl.MetadataFilterChain">
                <property name="filters">
                    <list />
                </property>
            </bean>
        </entry>
        <entry key="file:/opt/shibboleth-idp/metadata/edugain-metadata.xml">
            <bean class="org.opensaml.saml.metadata.resolver.filter.impl.MetadataFilterChain">
                <property name="filters">
                    <list />
                </property>
            </bean>
        </entry>
        <entry key="file:/opt/shibboleth-idp/metadata/cztestfed-metadata.xml">
            <bean class="org.opensaml.saml.metadata.resolver.filter.impl.MetadataFilterChain">
                <property name="filters">
                    <list />
                </property>
            </bean>
        </entry>
    </util:map>

</beans>
